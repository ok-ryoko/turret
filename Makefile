# Copyright 2023 OK Ryoko
# SPDX-License-Identifier: Apache-2.0

MAKEFLAGS += --warn-undefined-variables
SHELL := /bin/sh
.SHELLFLAGS := -euc
.DEFAULT_GOAL := help
.SUFFIXES:

GO := go

.PHONY: all #? Format, check and compile all Go code
all: fmt check build

.PHONY: setup #? Prepare the development environment
setup: setup.formatter setup.linters
	git config --local core.hooksPath githooks

.PHONY: setup.formatter
setup.formatter:
	$(GO) install golang.org/x/tools/cmd/goimports@v0.11.0

.PHONY: setup.linters
setup.linters:
	$(GO) install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.53.3

.PHONY: build #? Compile the principal binary from Go code
build:
	$(GO) build -o ./build/ ./cmd/turret/

.PHONY: check #? Assert that all Go code satisfies quality standards
check: lint test

.PHONY: lint #? Perform static analysis of all Go code
lint:
	golangci-lint run

.PHONY: test #? Run all Go tests
test:
	go test ./pkg/linux/pckg/

.PHONY: fmt #? Format all Go code
fmt:
	goimports -l -w ./

.PHONY: update #? Update build dependencies to a newer patch or minor release
update:
	$(GO) get -u ./...
	$(GO) mod tidy
	$(GO) mod verify

.PHONY: clean #? Remove all files generated by builds
clean:
	rm -f ./build/turret

.PHONY: help #? Describe all targets documented in the Makefile
help:
	@awk --posix --exec ./scripts/make_help.awk ./Makefile
