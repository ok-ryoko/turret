#!/bin/sh -
#
# Copyright 2023 OK Ryoko
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset

# filter prints the lines in a sequence that match a pattern.
#
# Parameters:
#   $1: pattern, a regular expression string
#   $2: lines, a string consisting of newline-separated items
#
filter() {
	pattern="$1"; lines="$2"
	printf '%s\n' "$(
		echo "${lines}" | { grep -e "${pattern}" || test $? = 1; }
	)"
}

# Handle the case where there are no commits in the local repository
#
if git rev-parse --verify HEAD >/dev/null 2>&1
then against=HEAD
else against="$(git hash-object -t tree /dev/null)"; fi
readonly against

# Capture the names of all files in the index
#
files="$(git diff --staged --name-only "${against}")"
if [ -z "${files}" ]; then exit 0; fi
readonly files

# Check all Go code and compile the principal binary
#
readonly go_pattern='^\.golangci\.yml$\|^Makefile$\|^cmd/.*\.go$\|^go\.mod$\|^go\.sum$\|^pkg/.*\.go$'
go_files="$(filter "${go_pattern}" "${files}")"
if [ -n "${go_files}" ]; then
	make --quiet check
	make --quiet build
fi

# Check all changed Git hooks as POSIX shell scripts
#
readonly shell_pattern='^\.githooks/.*$'
shell_scripts="$(filter "${shell_pattern}" "${files}")"
if [ -n "${shell_scripts}" ]; then
	readonly shell_scripts
	# shellcheck disable=SC2086
	shellcheck --shell=sh ${shell_scripts}
fi

# Check all changed YAML files
#
readonly yaml_pattern='^.*\.yml$\|^\.yamllint$'
yaml_files="$(filter "${yaml_pattern}" "${files}")"
if [ -n "${yaml_files}" ]; then
	readonly yaml_files
	# shellcheck disable=SC2086
	yamllint --no-warnings ${yaml_files}
fi

exit 0
